// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MachineList.proto

#ifndef PROTOBUF_MachineList_2eproto__INCLUDED
#define PROTOBUF_MachineList_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace YogiFit {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_MachineList_2eproto();
void protobuf_AssignDesc_MachineList_2eproto();
void protobuf_ShutdownFile_MachineList_2eproto();

class Machine;
class MachineList;

enum Machine_MachineType {
  Machine_MachineType_BENCHPRESS = 0,
  Machine_MachineType_TREADMILL = 1
};
bool Machine_MachineType_IsValid(int value);
const Machine_MachineType Machine_MachineType_MachineType_MIN = Machine_MachineType_BENCHPRESS;
const Machine_MachineType Machine_MachineType_MachineType_MAX = Machine_MachineType_TREADMILL;
const int Machine_MachineType_MachineType_ARRAYSIZE = Machine_MachineType_MachineType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Machine_MachineType_descriptor();
inline const ::std::string& Machine_MachineType_Name(Machine_MachineType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Machine_MachineType_descriptor(), value);
}
inline bool Machine_MachineType_Parse(
    const ::std::string& name, Machine_MachineType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Machine_MachineType>(
    Machine_MachineType_descriptor(), name, value);
}
// ===================================================================

class Machine : public ::google::protobuf::Message {
 public:
  Machine();
  virtual ~Machine();

  Machine(const Machine& from);

  inline Machine& operator=(const Machine& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Machine& default_instance();

  void Swap(Machine* other);

  // implements Message ----------------------------------------------

  Machine* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Machine& from);
  void MergeFrom(const Machine& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Machine_MachineType MachineType;
  static const MachineType BENCHPRESS = Machine_MachineType_BENCHPRESS;
  static const MachineType TREADMILL = Machine_MachineType_TREADMILL;
  static inline bool MachineType_IsValid(int value) {
    return Machine_MachineType_IsValid(value);
  }
  static const MachineType MachineType_MIN =
    Machine_MachineType_MachineType_MIN;
  static const MachineType MachineType_MAX =
    Machine_MachineType_MachineType_MAX;
  static const int MachineType_ARRAYSIZE =
    Machine_MachineType_MachineType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MachineType_descriptor() {
    return Machine_MachineType_descriptor();
  }
  static inline const ::std::string& MachineType_Name(MachineType value) {
    return Machine_MachineType_Name(value);
  }
  static inline bool MachineType_Parse(const ::std::string& name,
      MachineType* value) {
    return Machine_MachineType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required int32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required .YogiFit.Machine.MachineType type = 4;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 4;
  inline ::YogiFit::Machine_MachineType type() const;
  inline void set_type(::YogiFit::Machine_MachineType value);

  // @@protoc_insertion_point(class_scope:YogiFit.Machine)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::google::protobuf::int32 id_;
  int type_;
  friend void  protobuf_AddDesc_MachineList_2eproto();
  friend void protobuf_AssignDesc_MachineList_2eproto();
  friend void protobuf_ShutdownFile_MachineList_2eproto();

  void InitAsDefaultInstance();
  static Machine* default_instance_;
};
// -------------------------------------------------------------------

class MachineList : public ::google::protobuf::Message {
 public:
  MachineList();
  virtual ~MachineList();

  MachineList(const MachineList& from);

  inline MachineList& operator=(const MachineList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MachineList& default_instance();

  void Swap(MachineList* other);

  // implements Message ----------------------------------------------

  MachineList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MachineList& from);
  void MergeFrom(const MachineList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .YogiFit.Machine machine = 1;
  inline int machine_size() const;
  inline void clear_machine();
  static const int kMachineFieldNumber = 1;
  inline const ::YogiFit::Machine& machine(int index) const;
  inline ::YogiFit::Machine* mutable_machine(int index);
  inline ::YogiFit::Machine* add_machine();
  inline const ::google::protobuf::RepeatedPtrField< ::YogiFit::Machine >&
      machine() const;
  inline ::google::protobuf::RepeatedPtrField< ::YogiFit::Machine >*
      mutable_machine();

  // @@protoc_insertion_point(class_scope:YogiFit.MachineList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::YogiFit::Machine > machine_;
  friend void  protobuf_AddDesc_MachineList_2eproto();
  friend void protobuf_AssignDesc_MachineList_2eproto();
  friend void protobuf_ShutdownFile_MachineList_2eproto();

  void InitAsDefaultInstance();
  static MachineList* default_instance_;
};
// ===================================================================


// ===================================================================

// Machine

// required string name = 1;
inline bool Machine::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Machine::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Machine::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Machine::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& Machine::name() const {
  // @@protoc_insertion_point(field_get:YogiFit.Machine.name)
  return *name_;
}
inline void Machine::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:YogiFit.Machine.name)
}
inline void Machine::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:YogiFit.Machine.name)
}
inline void Machine::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:YogiFit.Machine.name)
}
inline ::std::string* Machine::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:YogiFit.Machine.name)
  return name_;
}
inline ::std::string* Machine::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Machine::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:YogiFit.Machine.name)
}

// required int32 id = 2;
inline bool Machine::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Machine::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Machine::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Machine::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Machine::id() const {
  // @@protoc_insertion_point(field_get:YogiFit.Machine.id)
  return id_;
}
inline void Machine::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:YogiFit.Machine.id)
}

// required .YogiFit.Machine.MachineType type = 4;
inline bool Machine::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Machine::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Machine::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Machine::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::YogiFit::Machine_MachineType Machine::type() const {
  // @@protoc_insertion_point(field_get:YogiFit.Machine.type)
  return static_cast< ::YogiFit::Machine_MachineType >(type_);
}
inline void Machine::set_type(::YogiFit::Machine_MachineType value) {
  assert(::YogiFit::Machine_MachineType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:YogiFit.Machine.type)
}

// -------------------------------------------------------------------

// MachineList

// repeated .YogiFit.Machine machine = 1;
inline int MachineList::machine_size() const {
  return machine_.size();
}
inline void MachineList::clear_machine() {
  machine_.Clear();
}
inline const ::YogiFit::Machine& MachineList::machine(int index) const {
  // @@protoc_insertion_point(field_get:YogiFit.MachineList.machine)
  return machine_.Get(index);
}
inline ::YogiFit::Machine* MachineList::mutable_machine(int index) {
  // @@protoc_insertion_point(field_mutable:YogiFit.MachineList.machine)
  return machine_.Mutable(index);
}
inline ::YogiFit::Machine* MachineList::add_machine() {
  // @@protoc_insertion_point(field_add:YogiFit.MachineList.machine)
  return machine_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::YogiFit::Machine >&
MachineList::machine() const {
  // @@protoc_insertion_point(field_list:YogiFit.MachineList.machine)
  return machine_;
}
inline ::google::protobuf::RepeatedPtrField< ::YogiFit::Machine >*
MachineList::mutable_machine() {
  // @@protoc_insertion_point(field_mutable_list:YogiFit.MachineList.machine)
  return &machine_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace YogiFit

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::YogiFit::Machine_MachineType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::YogiFit::Machine_MachineType>() {
  return ::YogiFit::Machine_MachineType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MachineList_2eproto__INCLUDED
